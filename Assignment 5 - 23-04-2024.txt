<?xml version="1.0" encoding="UTF-8"?>
<schema>
     <root>
          <SpecialtyRetailerItem>
               <ItemUPC>UCBOS1</ItemUPC>
               <ItemNumber>SKUA</ItemNumber>
               <AlternateItemNumber>SKUB</AlternateItemNumber>
          </SpecialtyRetailerItem>
     </root>
</schema>

<?xml version="1.0" encoding="UTF-8"?>
<schema>
     <root>
          <SpecialtyRetailerItem>
               <ItemUPC>UCBOS2</ItemUPC>
               <ItemNumber>SKUB</ItemNumber>
               <AlternateItemNumber></AlternateItemNumber>
          </SpecialtyRetailerItem>
     </root>
</schema>
 

<?xml version="1.0" encoding="UTF-8"?>
<schema>
     <Inventory>
          <EnterpriseInventory>
               <ItemNumber>SKUA</ItemNumber>
               <Quantity>10</Quantity>
               <AllocationStatus>Available</AllocationStatus>
          </EnterpriseInventory>
     </Inventory>
</schema>


<?xml version="1.0" encoding="UTF-8"?>
<schema>
     <Inventory>
          <EnterpriseInventory>
               <ItemNumber>SKUB</ItemNumber>
               <Quantity>30</Quantity>
               <AllocationStatus>Available</AllocationStatus>
          </EnterpriseInventory>
     </Inventory>
</schema>


Solution

xquery version "1.0-ml";

declare variable $SpecialtyRetailerItem := collection("SpecialtyRetailerItem");
declare variable $EnterpriseInventory := collection("EnterpriseInventory");

for $docs in $SpecialtyRetailerItem

let $ItemUPC := $docs/schema/root/SpecialtyRetailerItem/ItemUPC/text()
let $ItemNumber :=  $docs/schema/root/SpecialtyRetailerItem/ItemNumber/text()
let $AlternateItemNumber := $docs/schema/root/SpecialtyRetailerItem/AlternateItemNumber/text()

return if(not(empty($AlternateItemNumber)))
  then let $quantity1 := $EnterpriseInventory[/schema/Inventory/EnterpriseInventory/ItemNumber eq $ItemNumber]/schema/Inventory/EnterpriseInventory/Quantity/text()
       let $quantity2 := $EnterpriseInventory[/schema/Inventory/EnterpriseInventory/ItemNumber eq $AlternateItemNumber]/schema/Inventory/EnterpriseInventory/Quantity/text()
       let $sum := $quantity1+$quantity2
       return element Results{ element GlobalMasterItemId{$ItemUPC},element ItemNumber{$ItemNumber}, element AlternateItemNo{$AlternateItemNumber},element Qty{$sum},element Status{$EnterpriseInventory[/schema/Inventory/EnterpriseInventory/ItemNumber eq $ItemNumber]/schema/Inventory/EnterpriseInventory/AllocationStatus/text()}}
  else 
       let $quantity1 := $EnterpriseInventory[//ItemNumber eq $ItemNumber]/schema/Inventory/EnterpriseInventory/Quantity/text()
       return element Results{ element GlobalMasterItemId{$ItemUPC},element ItemNumber{$ItemNumber}, element AlternateItemNo{$AlternateItemNumber},element Qty{$quantity1},element Status{$EnterpriseInventory[/schema/Inventory/EnterpriseInventory/ItemNumber eq $ItemNumber]/schema/Inventory/EnterpriseInventory/AllocationStatus/text()}}


Output

<Results>
     <GlobalMasterItemId>UCBOS1</GlobalMasterItemId>
     <ItemNumber>SKUA</ItemNumber>
     <AlternateItemNo>SKUB</AlternateItemNo>
     <Qty>40</Qty>
     <Status>Available</Status>
</Results>



<Results>
     <GlobalMasterItemId>UCBOS2</GlobalMasterItemId>
     <ItemNumber>SKUB</ItemNumber>
     <AlternateItemNo>
     </AlternateItemNo>
     <Qty>30</Qty>
     <Status>Available</Status>
</Results>
